"""
Django settings for wolfx_tether project.

Generated by 'django-admin startproject' using Django 5.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-9)3dgg7ca0(0j+w6)dgb&w6kn*@3j1b=qbru#!4-5)ur#ni3%c'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

if DEBUG == True:
    WEBSOCKET_URL = "ws://127.0.0.1:8080"
else:
    WEBSOCKET_URL = "wss://tether.wolfx.io"

ALLOWED_HOSTS = ['*']

# Ensure cookies are allowed to be sent with WebSocket requests.
# If using HTTPS and you want to allow cookies over cross-site contexts, adjust as follows:
SESSION_COOKIE_SAMESITE = None
SESSION_COOKIE_SECURE = True  # if your site runs over HTTPS
CSRF_TRUSTED_ORIGINS = ['*']


# Application definition

INSTALLED_APPS = [
    "unfold",                           # before django.contrib.admin
    "unfold.contrib.filters",           # optional, if special filters are needed
    "unfold.contrib.forms",             # optional, if special form elements are needed
    "unfold.contrib.import_export",     # optional, if django-import-export package is used
    "unfold.contrib.guardian",          # optional, if django-guardian package is used
    "unfold.contrib.simple_history",    # optional, if django-simple-history package is used
    
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    
    'guardian',
    'channels',
    'simple_history',
    'import_export',
    'tinymce',
    
    'web'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'wolfx_tether.urls'

LOGIN_REDIRECT_URL = 'admin'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'web.context_processor.site_settings',
            ],
        },
    },
]

WSGI_APPLICATION = 'wolfx_tether.wsgi.application'

ASGI_APPLICATION = 'wolfx_tether.asgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# Django Channels
CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels.layers.InMemoryChannelLayer",
    },
}

# Django Guardian
AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend', # this is default
    'guardian.backends.ObjectPermissionBackend',
)

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# CORS and CSRF Settings
CSRF_TRUSTED_ORIGINS = [
    "http://localhost:8000",
    "http://localhost:3000",
    "http://localhost:8080",
    "https://tether.wolfx.io",
]

# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Kolkata'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'web/static'),
]
STATIC_ROOT =  os.path.join(BASE_DIR, 'static')
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

from django.templatetags.static import static
from django.urls import reverse_lazy
from django.utils.translation import gettext_lazy as _

UNFOLD = {
    "SITE_TITLE": 'Wolfx Tether Admin',
    "SITE_HEADER": 'Wolfx Tether Admin',
    "SITE_URL": "/",
    "SITE_SYMBOL": "code",  # symbol from icon set
    "SHOW_HISTORY": True,  # show/hide "History" button, default: True
    "SHOW_VIEW_ON_SITE": True,  # show/hide "View on site" button, default: True
    "THEME": "dark",  # Force theme: "dark" or "light". Will disable theme switcher
    "COLORS": {
    "font": {
        "subtle-light": "113 128 150",
        "subtle-dark": "176 192 213",
        "default-light": "85 100 122",
        "default-dark": "220 225 231",
        "important-light": "28 34 46",
        "important-dark": "248 250 252"
    },
    "primary": {
        "50": "242 245 250",
        "100": "229 236 247",
        "200": "204 222 242",
        "300": "153 192 229",
        "400": "102 162 217",
        "500": "51 132 204",
        "600": "41 109 170",
        "700": "33 87 136",
        "800": "28 71 111",
        "900": "23 58 89",
        "950": "14 35 54"
    }
},
    "SIDEBAR": {
        "show_search": True,
        "navigation": [
            {
                "title": ("Main"),
                "items": [
                    {
                        "title": ("Dashboard"),
                        "icon": "dashboard",
                        "link": reverse_lazy("admin:index"),
                        "permission": lambda request: request.user.is_superuser,
                    },
                    {
                        "title": ("Host"),
                        "icon": "dns",
                        "link": reverse_lazy("admin:web_host_changelist"),
                        "permission": lambda request: request.user.has_perm("web.view_host"),
                    },
                    {
                        "title": ("SiteSetting"),
                        "icon": "settings",
                        "link": reverse_lazy("admin:web_sitesetting_changelist"),
                        "permission": lambda request: request.user.has_perm("web.view_sitesetting"),
                    },
                    {
                        "title": ("ImageMaster"),
                        "icon": "image",
                        "link": reverse_lazy("admin:web_imagemaster_changelist"),
                        "permission": lambda request: request.user.has_perm("web.view_imagemaster"),
                    },
                    {
                        "title": ("FileMaster"),
                        "icon": "file_copy",
                        "link": reverse_lazy("admin:web_filemaster_changelist"),
                        "permission": lambda request: request.user.has_perm("web.view_filemaster"),
                    },
                    {
                        "title": ("Head"),
                        "icon": "print",
                        "link": reverse_lazy("admin:web_head_changelist"),
                        "permission": lambda request: request.user.has_perm("web.view_head"),
                    },
                    {
                        "title": ("Contact"),
                        "icon": "contact_mail",
                        "link": reverse_lazy("admin:web_contact_changelist"),
                        "permission": lambda request: request.user.has_perm("web.view_contact"),
                    },
                ],
            },
            {
                "title": ("Authentication and Authorization"),
                "separator": True,
                "collapsible": True,
                "items": [
                    {
                        "title": ("Users"),
                        "icon": "person",
                        "link": "/admin/auth/user/",
                        "permission": lambda request: request.user.has_perm("auth.view_user"),
                    },
                    {
                        "title": ("Groups"),
                        "icon": "group",
                        "link": "/admin/auth/group/",
                        "permission": lambda request: request.user.has_perm("auth.view_group")
                    },
                ],
            },
        ],
    },
}
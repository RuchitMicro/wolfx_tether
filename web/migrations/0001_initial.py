# Generated by Django 4.2.7 on 2024-12-04 12:03

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('extra_params', models.JSONField(blank=True, null=True)),
                ('updated_by', models.CharField(blank=True, max_length=300, null=True)),
                ('title', models.CharField(max_length=200)),
                ('sub_title', models.CharField(blank=True, max_length=200, null=True)),
                ('thumbnail', models.ImageField(upload_to='blog/')),
                ('featured_text', models.TextField(blank=True, null=True)),
                ('text', models.TextField(blank=True, null=True)),
                ('slug', models.SlugField(unique=True)),
                ('readtime', models.CharField(blank=True, max_length=200, null=True)),
                ('tags', models.TextField(blank=True, default='all', null=True)),
                ('head', models.TextField(blank=True, default='<meta name="title" content=" ">\n    <meta name="description" content=" ">\n    <meta name="keywords" content=" ">\n    <meta name="robots" content="index, follow">', null=True)),
                ('order_by', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.CharField(max_length=300)),
            ],
            options={
                'verbose_name_plural': 'Blog',
                'ordering': ['order_by'],
            },
        ),
        migrations.CreateModel(
            name='BlogCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('extra_params', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=300, null=True)),
                ('updated_by', models.CharField(blank=True, max_length=300, null=True)),
                ('category', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('image', models.FileField(blank=True, null=True, upload_to='blog_category/')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subcategories', to='web.blogcategory')),
            ],
            options={
                'verbose_name_plural': 'Blog Categories',
                'ordering': ['category'],
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('extra_params', models.JSONField(blank=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=300, null=True)),
                ('updated_by', models.CharField(blank=True, max_length=300, null=True)),
                ('full_name', models.CharField(max_length=300)),
                ('email_id', models.EmailField(max_length=300)),
                ('phone_number', models.CharField(max_length=20)),
                ('requirement', models.TextField()),
                ('email_ok', models.BooleanField(default=False)),
                ('journey_path', models.TextField(blank=True, help_text='A complete url trace of user journey that lead them to fill the form.', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FileMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('extra_params', models.JSONField(blank=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=300, null=True)),
                ('updated_by', models.CharField(blank=True, max_length=300, null=True)),
                ('name', models.CharField(max_length=300)),
                ('file', models.FileField(upload_to='file_master/')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Head',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('extra_params', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=300, null=True)),
                ('updated_by', models.CharField(blank=True, max_length=300, null=True)),
                ('target_url', models.URLField(help_text='Enter absolute URL of the target.  <br> Ex: https://wolfx.io/blog <br> https://wolfx.io/blog/ <br> https://wolfx.io/blog?category=UI-UX ', unique=True)),
                ('head', models.TextField(help_text='Head Data')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ImageMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('extra_params', models.JSONField(blank=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=300, null=True)),
                ('updated_by', models.CharField(blank=True, max_length=300, null=True)),
                ('name', models.CharField(max_length=300)),
                ('image', models.ImageField(upload_to='image_master/')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SiteSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('extra_params', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=300, null=True)),
                ('updated_by', models.CharField(blank=True, max_length=300, null=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='settings/')),
                ('favicon', models.FileField(blank=True, null=True, upload_to='settings/')),
                ('global_head', models.TextField(blank=True, help_text='Common <head> data. It will appear in all pages.', null=True)),
                ('address', models.TextField(blank=True, max_length=500, null=True)),
                ('contact_number', models.CharField(blank=True, max_length=13, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('gst', models.CharField(blank=True, help_text='GST Number', max_length=15, null=True)),
                ('extra_contact_details', models.TextField(blank=True, null=True)),
                ('facebook', models.URLField(blank=True, max_length=100, null=True)),
                ('instagram', models.URLField(blank=True, max_length=100, null=True)),
                ('twitter', models.URLField(blank=True, max_length=100, null=True)),
                ('linkedin', models.URLField(blank=True, max_length=100, null=True)),
                ('vision', models.TextField(blank=True, null=True)),
                ('mission', models.TextField(blank=True, null=True)),
                ('values', models.TextField(blank=True, null=True)),
                ('brochure', models.FileField(blank=True, null=True, upload_to='settings/')),
                ('navigation_menu', models.JSONField(blank=True, null=True)),
                ('about_us', models.TextField(blank=True, null=True)),
                ('terms_and_conditions', models.TextField(blank=True, null=True)),
                ('privacy_policy', models.TextField(blank=True, null=True)),
                ('return_policy', models.TextField(blank=True, null=True)),
                ('disclaimer', models.TextField(blank=True, null=True)),
                ('robots', models.FileField(blank=True, null=True, upload_to='settings/')),
            ],
            options={
                'verbose_name_plural': 'Site Setting',
            },
        ),
        migrations.CreateModel(
            name='HistoricalSiteSetting',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('extra_params', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('updated_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('created_by', models.CharField(blank=True, max_length=300, null=True)),
                ('updated_by', models.CharField(blank=True, max_length=300, null=True)),
                ('logo', models.TextField(blank=True, max_length=100, null=True)),
                ('favicon', models.TextField(blank=True, max_length=100, null=True)),
                ('global_head', models.TextField(blank=True, help_text='Common <head> data. It will appear in all pages.', null=True)),
                ('address', models.TextField(blank=True, max_length=500, null=True)),
                ('contact_number', models.CharField(blank=True, max_length=13, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('gst', models.CharField(blank=True, help_text='GST Number', max_length=15, null=True)),
                ('extra_contact_details', models.TextField(blank=True, null=True)),
                ('facebook', models.URLField(blank=True, max_length=100, null=True)),
                ('instagram', models.URLField(blank=True, max_length=100, null=True)),
                ('twitter', models.URLField(blank=True, max_length=100, null=True)),
                ('linkedin', models.URLField(blank=True, max_length=100, null=True)),
                ('vision', models.TextField(blank=True, null=True)),
                ('mission', models.TextField(blank=True, null=True)),
                ('values', models.TextField(blank=True, null=True)),
                ('brochure', models.TextField(blank=True, max_length=100, null=True)),
                ('navigation_menu', models.JSONField(blank=True, null=True)),
                ('about_us', models.TextField(blank=True, null=True)),
                ('terms_and_conditions', models.TextField(blank=True, null=True)),
                ('privacy_policy', models.TextField(blank=True, null=True)),
                ('return_policy', models.TextField(blank=True, null=True)),
                ('disclaimer', models.TextField(blank=True, null=True)),
                ('robots', models.TextField(blank=True, max_length=100, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical site setting',
                'verbose_name_plural': 'historical Site Setting',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalImageMaster',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('extra_params', models.JSONField(blank=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=300, null=True)),
                ('updated_by', models.CharField(blank=True, max_length=300, null=True)),
                ('name', models.CharField(max_length=300)),
                ('image', models.TextField(max_length=100)),
                ('created_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('updated_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical image master',
                'verbose_name_plural': 'historical image masters',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalHead',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('extra_params', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('updated_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('created_by', models.CharField(blank=True, max_length=300, null=True)),
                ('updated_by', models.CharField(blank=True, max_length=300, null=True)),
                ('target_url', models.URLField(db_index=True, help_text='Enter absolute URL of the target.  <br> Ex: https://wolfx.io/blog <br> https://wolfx.io/blog/ <br> https://wolfx.io/blog?category=UI-UX ')),
                ('head', models.TextField(help_text='Head Data')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical head',
                'verbose_name_plural': 'historical heads',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalFileMaster',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('extra_params', models.JSONField(blank=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=300, null=True)),
                ('updated_by', models.CharField(blank=True, max_length=300, null=True)),
                ('name', models.CharField(max_length=300)),
                ('file', models.TextField(max_length=100)),
                ('created_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('updated_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical file master',
                'verbose_name_plural': 'historical file masters',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalContact',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('extra_params', models.JSONField(blank=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=300, null=True)),
                ('updated_by', models.CharField(blank=True, max_length=300, null=True)),
                ('full_name', models.CharField(max_length=300)),
                ('email_id', models.EmailField(max_length=300)),
                ('phone_number', models.CharField(max_length=20)),
                ('requirement', models.TextField()),
                ('email_ok', models.BooleanField(default=False)),
                ('journey_path', models.TextField(blank=True, help_text='A complete url trace of user journey that lead them to fill the form.', null=True)),
                ('created_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('updated_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical contact',
                'verbose_name_plural': 'historical contacts',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalBlogImage',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('extra_params', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('updated_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('created_by', models.CharField(blank=True, max_length=300, null=True)),
                ('updated_by', models.CharField(blank=True, max_length=300, null=True)),
                ('image', models.TextField(max_length=100)),
                ('order_by', models.IntegerField(default=0)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('blog', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='web.blog')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical blog image',
                'verbose_name_plural': 'historical Blog Image',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalBlogCategory',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('extra_params', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('updated_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('created_by', models.CharField(blank=True, max_length=300, null=True)),
                ('updated_by', models.CharField(blank=True, max_length=300, null=True)),
                ('category', models.CharField(db_index=True, max_length=100)),
                ('slug', models.SlugField(max_length=100)),
                ('image', models.TextField(blank=True, max_length=100, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='web.blogcategory')),
            ],
            options={
                'verbose_name': 'historical blog category',
                'verbose_name_plural': 'historical Blog Categories',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalBlog',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('extra_params', models.JSONField(blank=True, null=True)),
                ('updated_by', models.CharField(blank=True, max_length=300, null=True)),
                ('title', models.CharField(max_length=200)),
                ('sub_title', models.CharField(blank=True, max_length=200, null=True)),
                ('thumbnail', models.TextField(max_length=100)),
                ('featured_text', models.TextField(blank=True, null=True)),
                ('text', models.TextField(blank=True, null=True)),
                ('slug', models.SlugField()),
                ('readtime', models.CharField(blank=True, max_length=200, null=True)),
                ('tags', models.TextField(blank=True, default='all', null=True)),
                ('head', models.TextField(blank=True, default='<meta name="title" content=" ">\n    <meta name="description" content=" ">\n    <meta name="keywords" content=" ">\n    <meta name="robots" content="index, follow">', null=True)),
                ('order_by', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('updated_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('created_by', models.CharField(max_length=300)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('category', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='web.blogcategory')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical blog',
                'verbose_name_plural': 'historical Blog',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='BlogImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('extra_params', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=300, null=True)),
                ('updated_by', models.CharField(blank=True, max_length=300, null=True)),
                ('image', models.ImageField(upload_to='blog_images/')),
                ('order_by', models.IntegerField(default=0)),
                ('blog', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.blog')),
            ],
            options={
                'verbose_name_plural': 'Blog Image',
                'ordering': ['order_by'],
            },
        ),
        migrations.AddField(
            model_name='blog',
            name='category',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='web.blogcategory'),
        ),
    ]
